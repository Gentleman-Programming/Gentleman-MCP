// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcp/v1/mcp.proto

package mcpv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_MESSAGE_TYPE_UNSPECIFIED MessageType = 0
	MessageType_MESSAGE_TYPE_USER        MessageType = 1
	MessageType_MESSAGE_TYPE_ASSISTANT   MessageType = 2
	MessageType_MESSAGE_TYPE_SYSTEM      MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSPECIFIED",
		1: "MESSAGE_TYPE_USER",
		2: "MESSAGE_TYPE_ASSISTANT",
		3: "MESSAGE_TYPE_SYSTEM",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED": 0,
		"MESSAGE_TYPE_USER":        1,
		"MESSAGE_TYPE_ASSISTANT":   2,
		"MESSAGE_TYPE_SYSTEM":      3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_mcp_v1_mcp_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_mcp_v1_mcp_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"` // "gemma3:4b"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RegisterRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegisterRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	JwtToken      string                 `protobuf:"bytes,2,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterResponse) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *RegisterResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type AuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JwtToken      string                 `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *AuthResponse) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AuthResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type          MessageType            `protobuf:"varint,4,opt,name=type,proto3,enum=mcp.v1.MessageType" json:"type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{4}
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *ChatMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type SingleChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"` // "gemma3:4b"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleChatRequest) Reset() {
	*x = SingleChatRequest{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleChatRequest) ProtoMessage() {}

func (x *SingleChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleChatRequest.ProtoReflect.Descriptor instead.
func (*SingleChatRequest) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{5}
}

func (x *SingleChatRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SingleChatRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SingleChatRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type SingleChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleChatResponse) Reset() {
	*x = SingleChatResponse{}
	mi := &file_mcp_v1_mcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleChatResponse) ProtoMessage() {}

func (x *SingleChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_v1_mcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleChatResponse.ProtoReflect.Descriptor instead.
func (*SingleChatResponse) Descriptor() ([]byte, []int) {
	return file_mcp_v1_mcp_proto_rawDescGZIP(), []int{6}
}

func (x *SingleChatResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SingleChatResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_mcp_v1_mcp_proto protoreflect.FileDescriptor

const file_mcp_v1_mcp_proto_rawDesc = "" +
	"\n" +
	"\x10mcp/v1/mcp.proto\x12\x06mcp.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"_\n" +
	"\x0fRegisterRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\"\x89\x01\n" +
	"\x10RegisterResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tjwt_token\x18\x02 \x01(\tR\bjwtToken\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"*\n" +
	"\vAuthRequest\x12\x1b\n" +
	"\tjwt_token\x18\x01 \x01(\tR\bjwtToken\"\\\n" +
	"\fAuthResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\"\xc8\x01\n" +
	"\vChatMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12'\n" +
	"\x04type\x18\x04 \x01(\x0e2\x13.mcp.v1.MessageTypeR\x04type\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"b\n" +
	"\x11SingleChatRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\"h\n" +
	"\x12SingleChatResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*w\n" +
	"\vMessageType\x12\x1c\n" +
	"\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MESSAGE_TYPE_USER\x10\x01\x12\x1a\n" +
	"\x16MESSAGE_TYPE_ASSISTANT\x10\x02\x12\x17\n" +
	"\x13MESSAGE_TYPE_SYSTEM\x10\x032\x8c\x01\n" +
	"\x10HandshakeService\x12=\n" +
	"\bRegister\x12\x17.mcp.v1.RegisterRequest\x1a\x18.mcp.v1.RegisterResponse\x129\n" +
	"\fAuthenticate\x12\x13.mcp.v1.AuthRequest\x1a\x14.mcp.v1.AuthResponse2\x89\x01\n" +
	"\fAgentService\x124\n" +
	"\x04Chat\x12\x13.mcp.v1.ChatMessage\x1a\x13.mcp.v1.ChatMessage(\x010\x01\x12C\n" +
	"\n" +
	"SingleChat\x12\x19.mcp.v1.SingleChatRequest\x1a\x1a.mcp.v1.SingleChatResponseB\x8c\x01\n" +
	"\n" +
	"com.mcp.v1B\bMcpProtoP\x01Z;github.com/Gentleman-Programming/gentleman-mcp/mcp/v1;mcpv1\xa2\x02\x03MXX\xaa\x02\x06Mcp.V1\xca\x02\x06Mcp\\V1\xe2\x02\x12Mcp\\V1\\GPBMetadata\xea\x02\aMcp::V1b\x06proto3"

var (
	file_mcp_v1_mcp_proto_rawDescOnce sync.Once
	file_mcp_v1_mcp_proto_rawDescData []byte
)

func file_mcp_v1_mcp_proto_rawDescGZIP() []byte {
	file_mcp_v1_mcp_proto_rawDescOnce.Do(func() {
		file_mcp_v1_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_v1_mcp_proto_rawDesc), len(file_mcp_v1_mcp_proto_rawDesc)))
	})
	return file_mcp_v1_mcp_proto_rawDescData
}

var file_mcp_v1_mcp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mcp_v1_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_mcp_v1_mcp_proto_goTypes = []any{
	(MessageType)(0),              // 0: mcp.v1.MessageType
	(*RegisterRequest)(nil),       // 1: mcp.v1.RegisterRequest
	(*RegisterResponse)(nil),      // 2: mcp.v1.RegisterResponse
	(*AuthRequest)(nil),           // 3: mcp.v1.AuthRequest
	(*AuthResponse)(nil),          // 4: mcp.v1.AuthResponse
	(*ChatMessage)(nil),           // 5: mcp.v1.ChatMessage
	(*SingleChatRequest)(nil),     // 6: mcp.v1.SingleChatRequest
	(*SingleChatResponse)(nil),    // 7: mcp.v1.SingleChatResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_mcp_v1_mcp_proto_depIdxs = []int32{
	8, // 0: mcp.v1.RegisterResponse.expires_at:type_name -> google.protobuf.Timestamp
	0, // 1: mcp.v1.ChatMessage.type:type_name -> mcp.v1.MessageType
	8, // 2: mcp.v1.ChatMessage.timestamp:type_name -> google.protobuf.Timestamp
	8, // 3: mcp.v1.SingleChatResponse.timestamp:type_name -> google.protobuf.Timestamp
	1, // 4: mcp.v1.HandshakeService.Register:input_type -> mcp.v1.RegisterRequest
	3, // 5: mcp.v1.HandshakeService.Authenticate:input_type -> mcp.v1.AuthRequest
	5, // 6: mcp.v1.AgentService.Chat:input_type -> mcp.v1.ChatMessage
	6, // 7: mcp.v1.AgentService.SingleChat:input_type -> mcp.v1.SingleChatRequest
	2, // 8: mcp.v1.HandshakeService.Register:output_type -> mcp.v1.RegisterResponse
	4, // 9: mcp.v1.HandshakeService.Authenticate:output_type -> mcp.v1.AuthResponse
	5, // 10: mcp.v1.AgentService.Chat:output_type -> mcp.v1.ChatMessage
	7, // 11: mcp.v1.AgentService.SingleChat:output_type -> mcp.v1.SingleChatResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mcp_v1_mcp_proto_init() }
func file_mcp_v1_mcp_proto_init() {
	if File_mcp_v1_mcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_v1_mcp_proto_rawDesc), len(file_mcp_v1_mcp_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_mcp_v1_mcp_proto_goTypes,
		DependencyIndexes: file_mcp_v1_mcp_proto_depIdxs,
		EnumInfos:         file_mcp_v1_mcp_proto_enumTypes,
		MessageInfos:      file_mcp_v1_mcp_proto_msgTypes,
	}.Build()
	File_mcp_v1_mcp_proto = out.File
	file_mcp_v1_mcp_proto_goTypes = nil
	file_mcp_v1_mcp_proto_depIdxs = nil
}
